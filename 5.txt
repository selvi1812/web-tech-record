Program: 
App.jsx
import { useEffect, useState } from "react";
import { NewTodoForm } from "./NewTodoForm";
import "./styles.css";
import { TodoList } from "./TodoList";
export default function App() {
const [todos, setTodos] = useState(() => {
const localValue = localStorage.getItem("ITEMS");
if (localValue == null) return [];
return JSON.parse(localValue);
});
useEffect(() => {
localStorage.setItem("ITEMS", JSON.stringify(todos));
}, [todos]);
function addTodo(title) {
setTodos((currentTodos) => {
return [
...currentTodos,
{ id: crypto.randomUUID(), title, completed: false },
];
});
}
function toggleTodo(id, completed) {
setTodos((currentTodos) => {
return currentTodos.map((todo) => {
if (todo.id === id) {
return { ...todo, completed };
}
return todo;
});
});
}
function deleteTodo(id, completed) {
setTodos((currentTodos) => {
return currentTodos.filter((todo) => todo.id !== id);
});
}
return (
<>
<NewTodoForm onSubmit={addTodo} />
<h1 className="header">Todo List</h1>
<TodoList todos={todos} toggleTodo={toggleTodo} deleteTodo={deleteTodo}
/>
</>
);
}
NewToDoForm.jsx
import { useState } from "react"
export function NewTodoForm({onSubmit}) { const [newItem, setNewItem] =
useState("") function handleSubmit(e){
e.preventDefault()
if (newItem === "") return onSubmit(newItem)
setNewItem("")
}
return (
<form onSubmit={handleSubmit} className="new-item-form">
<div className="form-row">
<label htmlFor="item">New Item</label>
<input
value={newItem}
onChange={e => setNewItem(e.target.value)} type="text"
id="item"
/>
</div>
<button className="btn">Add</button>
</form>
)
}
TodoList.jsx
import { TodoItem } from "./TodoItem"
export function TodoList({todos, toggleTodo, deleteTodo}) { return (
<ul className="list">
{todos.length === 0 && "No Todos"}
{todos.map(todo => { 
return (
<TodoItem
{...todo}
key = {todo.id} toggleTodo={toggleTodo} deleteTodo={deleteTodo}
/>
)
})}
</ul>)
}
TodoItem.jsx
export function TodoItem ({completed, id, title, toggleTodo, deleteTodo}) { 
return (
<li>
<label>
<input
type="checkbox" checked={completed}
onChange={e => toggleTodo(id, e.target.checked)}
/>
{title}
</label>
<button
onClick={() => deleteTodo(id)} className="btn btn-danger">
Delete
</button>
</li>
)
}